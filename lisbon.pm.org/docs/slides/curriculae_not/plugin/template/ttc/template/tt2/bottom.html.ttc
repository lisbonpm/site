use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.14
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1153648383',
        'name' => 'bottom.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "<!-- BEGIN bottom -->\n<div id=\"bottombar\">\n<table width=\"100%\">\n<tr>\n<td align=\"left\" valign=\"middle\">\n    <div";
    #line 6 "template/tt2/bottom.html"
    $output .=  $stash->get('show_controls') ? '' : ' style="display:none"';
    $output .=  ">\n    <a accesskey='p' href=\"";
    #line 7 "template/tt2/bottom.html"
    $output .=  $stash->get('prev_slide');
    $output .=  "\">";
    #line 7 "template/tt2/bottom.html"
    $output .=  $stash->get('link_previous');
    $output .=  "</a> |\n    <a accesskey='i' href=\"";
    #line 8 "template/tt2/bottom.html"
    $output .=  $stash->get('index_slide');
    $output .=  "\">";
    #line 8 "template/tt2/bottom.html"
    $output .=  $stash->get('link_index');
    $output .=  "</a> |\n    <a accesskey='n' href=\"";
    #line 9 "template/tt2/bottom.html"
    $output .=  $stash->get('next_slide');
    $output .=  "\">";
    #line 9 "template/tt2/bottom.html"
    $output .=  $stash->get('link_next');
    $output .=  "</a>\n    </div>\n</td>\n<td align=\"right\" valign=\"middle\">\n    ";
    #line 13 "template/tt2/bottom.html"
    $output .=  $stash->get('copyright_string');
    $output .=  "\n</td>\n</tr>\n</table>\n</div> \n<div id=\"logo\"></div>\n<div class=\"spacer\">\n<a name=\"end\"></a>\n</div>\n</body>\n</html>\n\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
